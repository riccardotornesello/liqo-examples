apiVersion: v1
kind: Namespace
metadata:
  name: ns1
---
apiVersion: v1
kind: Pod
metadata:
  name: p1
  namespace: ns1
  labels:
    app: p1
spec:
  containers:
    - name: tester
      image: riccardotornesello/hello-world-http-server:v1.1.0
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 8080
          name: web
---
apiVersion: v1
kind: Service
metadata:
  name: s1
  namespace: ns1
spec:
  ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: web
  selector:
    app: p1
  type: ClusterIP
---
apiVersion: v1
kind: Namespace
metadata:
  name: ns2
---
apiVersion: v1
kind: Pod
metadata:
  name: p2
  namespace: ns2
  labels:
    app: p2
spec:
  containers:
    - name: tester
      image: riccardotornesello/hello-world-http-server:v1.1.0
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 8080
          name: web
---
apiVersion: v1
kind: Service
metadata:
  name: s2
  namespace: ns2
spec:
  ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: web
  selector:
    app: p2
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-from-other-namespaces
  namespace: ns1
spec:
  podSelector: {} # Applica la policy a tutti i pod del namespace ns1
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector: {} # Consente solo traffico da pod nello stesso namespace
